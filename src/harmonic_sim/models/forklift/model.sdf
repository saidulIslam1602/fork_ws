<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="forklift">
    <static>false</static>

    <!-- Main robot body: rename 'chassis' to 'base_link' -->
    <link name="base_link">
      <!-- Raised above the ground -->
      <pose>0 0.0 0.4 0 0 0</pose>
      <inertial>
        <mass>10</mass>
        <pose>0 0 0 0 0 0</pose>
        <inertia>
          <ixx>1.6</ixx>  <iyy>3.4</iyy>  <izz>4.2</izz>
          <ixy>0</ixy>    <ixz>0</ixz>    <iyz>0</iyz>
        </inertia>
      </inertial>
      

      <collision name="body_collision">
        <!-- SAME offset and rotation you used for the visual -->
        <pose>0 0.0 -0.2 0 0 3.14159</pose>

        <geometry>
          <mesh>
            <!-- use package:// or model:// once the mesh is installed; file:// is fine for testing -->
            <!-- kina_body_1_0_simple.stl kina_body_1_1.stl -->
            <uri>file:///home/saidul/Desktop/fork_ws/src/harmonic_sim/meshes/kina_body_1_0_simple.stl</uri> 
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </collision>


        <!-- NEW forklift body visual -->
    <visual name="body_visual">
      <pose>0 0.0 -0.2 0 0 3.14159</pose>        <!-- offset if STL origin ≠ chassis origin -->
      <geometry>
        <mesh>
          <!-- “model://forklift” resolves to the folder that holds model.config -->
          <!--  <uri>package://harmonic_sim/meshes/kina_body_1_0_simple.stl</uri> -->
          <uri>file:///home/saidul/Desktop/fork_ws/src/harmonic_sim/meshes/kina_body_1_0_simple.stl</uri>
          <scale>0.001 0.001 0.001</scale>
        </mesh>

      </geometry>
      </visual>

      <!-- Lidar sensor is part of base_link, but publishes data in 'lidar_link' frame -->
      <sensor name="lidar_sensor" type="ray">
        <pose>0 0 0.2 0 0 3.14159</pose>
        <update_rate>10</update_rate>
        <visualize>false</visualize> <!-- true -->
        <always_on>true</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>-3.14159</min_angle>
              <max_angle>3.14159</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.3</min>
            <max>20</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="lidar_plugin" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <use_sim_time>true</use_sim_time>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>lidar_link</frame_name>
        </plugin>
      </sensor>

    </link>











<!--  Front camera (mirrored & now +180° about Z) -->
<link name="front_cam_link">
  <!-- new pose: -1.585  -0.19  0.91  0  2.20  (3.14 + 3.14159 = 6.28159) -->
  <pose>-1.585 -0.19 0.91 0 2.20 6.28159</pose>
  <inertial>
    <mass>0.05</mass>
    <inertia>
      <ixx>1e-5</ixx><iyy>1e-5</iyy><izz>1e-5</izz>
      <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
    </inertia>
  </inertial>

  <visual name="front_cam_housing">
    <geometry>
      <box>
        <size>0.20 0.10 0.10</size>
      </box>
    </geometry>
    <material>
      <ambient>0 1 0 1</ambient>
      <diffuse>0 1 0 1</diffuse>
    </material>
  </visual>

  <sensor name="front_cam_depth" type="depth">
    <pose>0 0 0 0 0 0</pose>
    <update_rate>30</update_rate>
    <visualize>true</visualize>
    <always_on>true</always_on>

    <camera>
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>10</far>
      </clip>
      <depth_camera/>
    </camera>

    <plugin name="front_cam_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>front_cam</namespace>
        <use_sim_time>true</use_sim_time>
      </ros>
      <camera_name>front_cam</camera_name>
      <image_topic_name>image_raw</image_topic_name>
      <depth_image_topic_name>depth/image_raw</depth_image_topic_name>
      <point_cloud_topic_name>points</point_cloud_topic_name>
      <camera_info_topic_name>camera_info</camera_info_topic_name>
      <frame_name>front_cam_link</frame_name>
      <point_cloud_cutoff>0.2</point_cloud_cutoff>
    </plugin>
  </sensor>
</link>

<joint name="front_cam_joint" type="fixed">
  <parent>base_link</parent>
  <child>front_cam_link</child>
</joint>


<!--  Back camera (mirrored & now +180° about Z) -->
<link name="back_cam_link">
  <!-- new pose: -0.685  -0.19  0.25  0  0  (3.14 + 3.14159 = 6.28159) -->
  <pose>-0.685 -0.19 0.25 0 0 6.28159</pose>
  <inertial>
    <mass>0.05</mass>
    <inertia>
      <ixx>1e-5</ixx><iyy>1e-5</iyy><izz>1e-5</izz>
      <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
    </inertia>
  </inertial>

  <visual name="back_cam_housing">
    <geometry>
      <box>
        <size>0.20 0.10 0.10</size>
      </box>
    </geometry>
    <material>
      <ambient>0 1 0 1</ambient>
      <diffuse>0 1 0 1</diffuse>
    </material>
  </visual>

  <sensor name="back_cam_depth" type="depth">
    <pose>0 0 0 0 0 0</pose>
    <update_rate>30</update_rate>
    <visualize>true</visualize>
    <always_on>true</always_on>

    <camera>
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>10</far>
      </clip>
      <depth_camera/>
    </camera>

    <plugin name="back_cam_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>back_cam</namespace>
        <use_sim_time>true</use_sim_time>
      </ros>
      <camera_name>back_cam</camera_name>
      <image_topic_name>image_raw</image_topic_name>
      <depth_image_topic_name>depth/image_raw</depth_image_topic_name>
      <point_cloud_topic_name>points</point_cloud_topic_name>
      <camera_info_topic_name>camera_info</camera_info_topic_name>
      <frame_name>back_cam_link</frame_name>
      <point_cloud_cutoff>0.2</point_cloud_cutoff>
    </plugin>
  </sensor>
</link>

<joint name="back_cam_joint" type="fixed">
  <parent>base_link</parent>
  <child>back_cam_link</child>
</joint>


<!--  Left camera (mirrored & now +180° about Z) -->
<link name="left_cam_link">
  <!-- new pose: -1.07  -0.57  0.91  0  2.26  (–1.57 + 3.14159 = 1.57159) -->
  <pose>-1.07 -0.57 0.91 0 2.26 1.57159</pose>
  <inertial>
    <mass>0.05</mass>
    <inertia>
      <ixx>1e-5</ixx><iyy>1e-5</iyy><izz>1e-5</izz>
      <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
    </inertia>
  </inertial>

  <visual name="left_cam_housing">
    <geometry>
      <box>
        <size>0.20 0.10 0.10</size>
      </box>
    </geometry>
    <material>
      <ambient>0 1 0 1</ambient>
      <diffuse>0 1 0 1</diffuse>
    </material>
  </visual>

  <sensor name="left_cam_depth" type="depth">
    <pose>0 0 0 0 0 0</pose>
    <update_rate>30</update_rate>
    <visualize>true</visualize>
    <always_on>true</always_on>

    <camera>
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>10</far>
      </clip>
      <depth_camera/>
    </camera>

    <plugin name="left_cam_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>left_cam</namespace>
        <use_sim_time>true</use_sim_time>
      </ros>
      <camera_name>left_cam</camera_name>
      <image_topic_name>image_raw</image_topic_name>
      <depth_image_topic_name>depth/image_raw</depth_image_topic_name>
      <point_cloud_topic_name>points</point_cloud_topic_name>
      <camera_info_topic_name>camera_info</camera_info_topic_name>
      <frame_name>left_cam_link</frame_name>
      <point_cloud_cutoff>0.2</point_cloud_cutoff>
    </plugin>
  </sensor>
</link>

<joint name="left_cam_joint" type="fixed">
  <parent>base_link</parent>
  <child>left_cam_link</child>
</joint>


<!--  Right camera (mirrored & now +180° about Z) -->
<link name="right_cam_link">
  <!-- new pose: -1.07   0.23  0.91  0  2.357  (1.57 + 3.14159 = 4.71159) -->
  <pose>-1.07 0.23 0.91 0 2.357 4.71159</pose>
  <inertial>
    <mass>0.05</mass>
    <inertia>
      <ixx>1e-5</ixx><iyy>1e-5</iyy><izz>1e-5</izz>
      <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
    </inertia>
  </inertial>

  <visual name="right_cam_housing">
    <geometry>
      <box>
        <size>0.20 0.10 0.10</size>
      </box>
    </geometry>
    <material>
      <ambient>0 1 0 1</ambient>
      <diffuse>0 1 0 1</diffuse>
    </material>
  </visual>

  <sensor name="right_cam_depth" type="depth">
    <pose>0 0 0 0 0 0</pose>
    <update_rate>30</update_rate>
    <visualize>true</visualize>
    <always_on>true</always_on>

    <camera>
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>10</far>
      </clip>
      <depth_camera/>
    </camera>

    <plugin name="right_cam_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>right_cam</namespace>
        <use_sim_time>true</use_sim_time>
      </ros>
      <camera_name>right_cam</camera_name>
      <image_topic_name>image_raw</image_topic_name>
      <depth_image_topic_name>depth/image_raw</depth_image_topic_name>
      <point_cloud_topic_name>points</point_cloud_topic_name>
      <camera_info_topic_name>camera_info</camera_info_topic_name>
      <frame_name>right_cam_link</frame_name>
      <point_cloud_cutoff>0.2</point_cloud_cutoff>
    </plugin>
  </sensor>
</link>

<joint name="right_cam_joint" type="fixed">
  <parent>base_link</parent>
  <child>right_cam_link</child>
</joint>











    <!-- ######################################################### -->
    <!-- Front Left Support Wheel -->
    <link name="front_left_wheel">
      <pose>0 0.0 0.1 1.5708 0 0</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <!-- Static & dynamic friction coefficients 3.0 is high (rubber-on-concrete -->
              <mu>3.0</mu>
              <mu2>3.0</mu2>
              <!-- Aligns the friction pyramid with the wheel’s rolling direction, preventing sideways “ice-skating -->
              <fdir1>0 1 0</fdir1>
              <!-- Zero removes the built-in slip compliance so the tyre keeps static friction -->
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>

        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <!-- Front Right Support Wheel -->
    <link name="front_right_wheel">
      <pose>0 -0.39 0.1 1.5708 0 0</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <!-- Static & dynamic friction coefficients 3.0 is high (rubber-on-concrete -->
              <mu>3.0</mu>
              <mu2>3.0</mu2>
              <!-- Aligns the friction pyramid with the wheel’s rolling direction, preventing sideways “ice-skating -->
              <fdir1>0 1 0</fdir1>
              <!-- Zero removes the built-in slip compliance so the tyre keeps static friction -->
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>

        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <!-- ######################################################### -->
    <!-- Passive support ball (right of the drive wheel) -->
    <link name="support_ball">
      <!-- Same x, slightly +y, and lower z than the drive wheel -->
      <pose>-1.36 -0.39 0.1 0 0 0</pose>

      <!-- A 0.16 m diameter steel ball -->
      <collision name="collision">
        <geometry>
          <sphere><radius>0.10</radius></sphere>
        </geometry>
        <surface>
          <!-- Low friction so it slides/rolls easily -->
          <friction>
            <ode>
              <!-- Static & dynamic friction coefficients 3.0 is high (rubber-on-concrete -->
              <mu>3.0</mu>
              <mu2>3.0</mu2>
              <!-- Aligns the friction pyramid with the wheel’s rolling direction, preventing sideways “ice-skating -->
              <fdir1>0 1 0</fdir1>
              <!-- Zero removes the built-in slip compliance so the tyre keeps static friction -->
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>

        </surface>
      </collision>

      <visual name="visual">
        <geometry>
          <sphere><radius>0.10</radius></sphere>
        </geometry>
        <material>
          <ambient>0.8 0.8 0.8 1</ambient>
          <diffuse>0.8 0.8 0.8 1</diffuse>
          <specular>0.2 0.2 0.2 1</specular>  <!-- subtle highlight -->
          <emissive>0 0 0 1</emissive>
        </material>
      </visual>
    </link>



    <!-- ######################################################### -->
    <!-- Steering Link: intermediary link for drive wheel steering -->
    <link name="steering_link">
      <pose>-1.36 0.0 0.1 1.5708 0 0</pose>
    </link>

    <!-- Rear Drive Wheel -->
    <link name="drive_wheel">
      <pose>-1.36 0.0 0.1 1.5708 0 0</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.11</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <!-- Static & dynamic friction coefficients 3.0 is high (rubber-on-concrete -->
              <mu>4.0</mu>
              <mu2>4.0</mu2>
              <!-- Aligns the friction pyramid with the wheel’s rolling direction, preventing sideways “ice-skating -->
              <fdir1>0 1 0</fdir1> 
              <!-- Zero removes the built-in slip compliance so the tyre keeps static friction -->
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>

        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.11</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>


    <!-- ######################################################### -->
    <!-- Joints: replace 'chassis' with 'base_link' as parent -->
    <joint name="front_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_left_wheel</child>
      <pose>0.0 -0.0 0.0 1.5708 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="front_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_right_wheel</child>
      <pose>0.0 0.0 0.0 1.5708 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="support_ball_joint" type="revolute">
      <parent>base_link</parent>
      <child>support_ball</child>
      <pose>0 0.0 0.0 0 0 0</pose>
    </joint>

    <!-- Left wheel joint for differential drive -->
    <joint name="left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_left_wheel</child>
      <axis>
        <xyz>0 1 0</xyz>
        <dynamics>
          <damping>0.2</damping>
          <friction>0.1</friction>
        </dynamics>
      </axis>
    </joint>

    <!-- Right wheel joint for differential drive -->
    <joint name="right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_right_wheel</child>
      <axis>
        <xyz>0 1 0</xyz>
        <dynamics>
          <damping>0.2</damping>
          <friction>0.1</friction>
        </dynamics>
      </axis>
    </joint>

    <joint name="steering_joint" type="revolute">
      <parent>base_link</parent>
      <child>steering_link</child>
      <pose>-0.0 0 0.0 1.5708 0 3.14159</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1000</lower>
          <upper>1000</upper>
        </limit>
        <dynamics>
          <damping>5.5</damping>
          <friction>0.1</friction>
        </dynamics>
      </axis>
    </joint>

    <joint name="drive_joint" type="revolute">
      <parent>steering_link</parent>
      <child>drive_wheel</child>
      <pose>-0.0 0 0.0 1.5708 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1000</lower>
          <upper>1000</upper>
        </limit>
        <dynamics>
          <damping>8.5</damping>
          <friction>0.1</friction>
        </dynamics>
      </axis>
    </joint>

    <!-- Differential drive plugin for ROS2 navigation -->
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>
      
      <!-- Wheel Information -->
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      
      <!-- Kinematics -->
      <wheel_separation>0.39</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      
      <!-- Limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      
      <!-- Output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>

  </model>
</sdf>
